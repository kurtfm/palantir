{
	"variables": [],
	"info": {
		"name": "Brand APIs: User Flows",
		"_postman_id": "6673b7fe-2a80-b190-481f-454447d95573",
		"description": "user_flows|monitor.brandapi",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "0. Application Access",
			"description": " application_access",
			"item": [
				{
					"name": "authorize service",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar serviceAccessToken = typeof response.access_token !== 'undefined' ? response.access_token : 0;\npostman.setEnvironmentVariable(\"service_access_token\", serviceAccessToken);\n\n\n//tests\ntests[\"Success Response\"] = responseCode.code === 200;\ntests[\"Got Service access_token\"] = serviceAccessToken ? 1:0;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function base64url(source) {\n  encodedSource = CryptoJS.enc.Base64.stringify(source);\n  encodedSource = encodedSource.replace(/=+$/, '');\n  encodedSource = encodedSource.replace(/\\+/g, '-');\n  encodedSource = encodedSource.replace(/\\//g, '_');\n  \n  return encodedSource;\n}\nvar header = {\n  \"alg\": \"HS256\",\n  \"typ\": \"JWT\"\n};\nvar stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header));\nvar encodedHeader = base64url(stringifiedHeader);\nvar now = new Date() / 1000;\n//var jwsLife = ( 24 * 60 * 60 );\nvar jwsLife = 10;\nvar body = {\n    \"iss\": postman.getEnvironmentVariable(\"client_id\"),\n    \"sub\": postman.getEnvironmentVariable(\"client_id\"),\n    \"aud\": postman.getEnvironmentVariable(\"oauth_server\"),\n    \"iat\": now,\n    \"exp\": now + jwsLife,\n};\n\nvar stringifiedBody = CryptoJS.enc.Utf8.parse(JSON.stringify(body));\nvar encodedBody = base64url(stringifiedBody);\nvar token = encodedHeader + \".\" + encodedBody;\nvar signature = CryptoJS.HmacSHA256(token, postman.getEnvironmentVariable(\"client_secret\"));\nsignature = base64url(signature);\nvar signedToken = token + \".\" + signature;\npostman.setEnvironmentVariable(\"jws\", signedToken);"
							}
						}
					],
					"request": {
						"url": "{{oauth_server}}",
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text",
									"enabled": true
								},
								{
									"key": "client_assertion_type",
									"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
									"type": "text",
									"enabled": true
								},
								{
									"key": "scope",
									"value": "brand_api ropc brand_api_customer_support brand_api_migration",
									"type": "text",
									"enabled": true
								},
								{
									"key": "client_assertion",
									"value": "{{jws}}",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "oauth2,service_access_token"
					},
					"response": []
				}
			]
		},
		{
			"name": "1. Register user with password",
			"description": "register_users_flow",
			"item": [
				{
					"name": "doesUserExist",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\n\nif(response.data.doesExist === 'true'){\npostman.setEnvironmentVariable(\"create_user_email\", postman.getEnvironmentVariable(\"gmail_user\") \n    + \"+\" + postman.getEnvironmentVariable(\"namespace\") \n    + \".\" + Math.random().toString(36).substring(2) + _.random(20000, 100) + '@gmail.com');\n}\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"create_user_email\", postman.getEnvironmentVariable(\"gmail_user\") \n    + \"+\" + postman.getEnvironmentVariable(\"namespace\") \n    + \".\" + Math.random().toString(36).substring(2) + _.random(20000, 100) + '@gmail.com');"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}doesUserExist",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"email\":\"{{create_user_email}}\"}"
						},
						"description": "does_user_exist"
					},
					"response": []
				},
				{
					"name": "validateEmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\n"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}validateEmail",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"email\":\"{{create_user_email}}\"}"
						},
						"description": "validate_email"
					},
					"response": []
				},
				{
					"name": "validateDisplayName",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar resId = typeof response.data.reservationId !== 'undefined' ? response.data.reservationId : '';\npostman.setEnvironmentVariable('create_user_reservationid', resId);\nif(resId === '' ){\n    postman.setEnvironmentVariable(\"create_user_displayname\",Math.random().toString(36).substring(2)\n+ '-' +  (Math.floor(Math.random()* (_.random(20000,4000) - _.random(200,400)+ 1) + _.random(5,1000))) );\n}\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"create_user_displayname\",Math.random().toString(36).substring(2)\n+ '-' +  (Math.floor(Math.random()* (_.random(20000,4000) - _.random(200,400)+ 1) + _.random(5,1000))) );"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}validateDisplayName",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"displayName\":\"{{create_user_displayname}}\"}"
						},
						"description": "validate_display_name"
					},
					"response": []
				},
				{
					"name": "validatePassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\nif(response.status === 'fail'){\n    postman.setEnvironmentVariable(\"create_user_password\",\"hy%%%123\");\n}"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"create_user_password\",\"nm###123\");"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}validatePassword",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"username\":\"{{create_user_email}}\",\"password\":\"{{create_user_password}}\"}"
						},
						"description": "validate_password"
					},
					"response": []
				},
				{
					"name": "createUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar userId = typeof response.data.id !== 'undefined' ? response.data.id : 0;\n\npostman.setEnvironmentVariable('new_user_id', userId);\n\npostman.setEnvironmentVariable(\"txnid\", postman.getResponseHeader(\"X-AOL-IDENTITY-TX-ID\"));\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\n\n//recovery\nvar count = typeof postman.getEnvironmentVariable('createUserTries') !== 'undefined' ? postman.getEnvironmentVariable('createUserTries') : 1;\n\nif(response.status !== 'success' && count < 3){\n    postman.setEnvironmentVariable('createUserTries', count++);\n    \n   postman.setEnvironmentVariable(\"create_user_email\", postman.getEnvironmentVariable(\"gmail_user\") \n    + \"+\" + postman.getEnvironmentVariable(\"namespace\") \n    + \".\" + Math.random().toString(36).substring(2) + _.random(20000, 100) + '@gmail.com');\n    \n    postman.setEnvironmentVariable(\"create_user_displayname\",Math.random().toString(36).substring(2)\n+ '-' +  (Math.floor(Math.random()* (_.random(20000,4000) - _.random(200,400)+ 1) + _.random(5,1000))) );\n\n    postman.setEnvironmentVariable(\"create_user_password\",\"nm###\" + _.random(100,900) );\n    \n    postman.setNextRequest('create_user');\n}"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}createUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"email\":\"{{create_user_email}}\",\"password\":\"{{create_user_password}}\",\"displayName\":\"{{create_user_displayname}}\",\"displayNameReservationId\":\"{{create_user_reservationid}}\"}"
						},
						"description": "create_user,user_with_password"
					},
					"response": []
				},
				{
					"name": "getTokenByTxnId",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar token = typeof response.data !== 'undefined' ? response.data : 0;\n\npostman.setEnvironmentVariable('register_email_token', token);\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\n\n//recovery\nvar count = typeof postman.getEnvironmentVariable('regGetTokenByTxnIdTries') !== 'undefined' ? postman.getEnvironmentVariable('regGetTokenByTxnIdTries') : 1;\n\nif(response.status !== 'success' && count < 3){\n    postman.setNextRequest('get_token_by_txn_id_reg_flow');\n    \n}\n\n"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}getTokenByTxnId",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\n  \"transactionId\": \"{{txnid}}\"\n}"
						},
						"description": "get_token_by_txn_id"
					},
					"response": []
				},
				{
					"name": "confirmEmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\n"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}confirmEmail",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\n  \"token\": \"{{register_email_token}}\",\n  \"username\":\"{{create_user_email}}\"\n}"
						},
						"description": "confirm_email"
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Register social user",
			"description": "register_social_flow",
			"item": [
				{
					"name": "createUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar userId = typeof response.data.id !== 'undefined' ? response.data.id : 0;\npostman.setEnvironmentVariable(\"social_user_id\", userId);\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\ntests[\"New user created\"] = typeof response.status !== 'undefined' && response.status === 'success';"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"create_social_user\", Math.random().toString(36).substring(2) + _.random(2000, 100));\n\npostman.setEnvironmentVariable(\"create_social_email\", postman.getEnvironmentVariable(\"gmail_user\") \n    + \"+\" + postman.getEnvironmentVariable(\"namespace\") \n    + \".\" + Math.random().toString(36).substring(2) + _.random(20000, 100) + '@gmail.com');"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}createUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"email\":\"{{create_social_email}}\",\"socialUser\":\"{{create_social_user}}\",\"socialPid\":\"{{social_user_provider}}\",\"confirmedEmail\":\"T\" }"
						},
						"description": "create_user,social_user"
					},
					"response": []
				}
			]
		},
		{
			"name": "3. OAuth2 user authentication",
			"description": "authentication_flow",
			"item": [
				{
					"name": "auth user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar userAccessToken = typeof response.access_token !== 'undefined' ? response.access_token : 0;\nvar userRefreshToken = typeof response.refresh_token !== 'undefined' ? response.refresh_token : 0;\npostman.setEnvironmentVariable(\"user_access_token\", userAccessToken);\npostman.setEnvironmentVariable(\"user_refresh_token\", userRefreshToken);\n\n//tests\ntests[\"Success Response\"] = responseCode.code === 200;\ntests[\"Got user access_token\"] = userAccessToken ? 1 : 0;\ntests[\"Got user refresh_token\"] = userRefreshToken ? 1 : 0;\n"
							}
						}
					],
					"request": {
						"url": "{{oauth_server}}",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{create_user_email}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text",
									"enabled": true
								},
								{
									"key": "scope",
									"value": "brand_api",
									"type": "text",
									"enabled": true
								},
								{
									"key": "password",
									"value": "{{create_user_password}}",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "oauth2,user_with_password"
					},
					"response": []
				},
				{
					"name": "getUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar userId = typeof response.data.id !== 'undefined' ? response.data.id : 0;\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\ntests[\"Got user data\"] = userId ? 1 : 0;"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}getUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\"}"
						},
						"description": "get_user"
					},
					"response": []
				},
				{
					"name": "refresh user token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n\n\n//tests\ntests[\"Success Response\"] = responseCode.code === 200;\ntests[\"Got user access_token\"] = typeof response.access_token !== 'undefined';\ntests[\"Got user refresh_token\"] = typeof response.refresh_token !== 'undefined';"
							}
						}
					],
					"request": {
						"url": "{{oauth_server}}",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "refresh_token",
									"value": "{{user_refresh_token}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text",
									"enabled": true
								},
								{
									"key": "scope",
									"value": "brand_api",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "oauth2,refresh_token"
					},
					"response": []
				},
				{
					"name": "auth social user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar userAccessToken = typeof response.access_token !== 'undefined' ? response.access_token : 0;\nvar userRefreshToken = typeof response.refresh_token !== 'undefined' ? response.refresh_token : 0;\npostman.setEnvironmentVariable(\"social_user_access_token\", userAccessToken);\npostman.setEnvironmentVariable(\"social_user_refresh_token\", userRefreshToken);\n//tests\ntests[\"Success Response\"] = responseCode.code === 200;\ntests[\"Got user access_token\"] = userAccessToken ? 1 : 0;\ntests[\"Got user refresh_token\"] = userRefreshToken ? 1 : 0;"
							}
						}
					],
					"request": {
						"url": "{{oauth_server}}",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{create_social_user}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "grant_type",
									"value": "urn:x-aol:social:login",
									"type": "text",
									"enabled": true
								},
								{
									"key": "scope",
									"value": "brand_api",
									"type": "text",
									"enabled": true
								},
								{
									"key": "provider",
									"value": "{{social_user_provider}}",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "oauth2,social_user"
					},
					"response": []
				},
				{
					"name": "refresh social user token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n//tests\ntests[\"Success Response\"] = responseCode.code === 200;\ntests[\"Got user access_token\"] = typeof response.access_token !== 'undefined';\ntests[\"Got user refresh_token\"] = typeof response.refresh_token !== 'undefined';"
							}
						}
					],
					"request": {
						"url": "{{oauth_server}}",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "refresh_token",
									"value": "{{social_user_refresh_token}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text",
									"enabled": true
								},
								{
									"key": "scope",
									"value": "brand_api",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "oauth2,social_user,refresh_token"
					},
					"response": []
				},
				{
					"name": "getUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar userId = typeof response.data.id !== 'undefined' ? response.data.id : 0;\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\ntests[\"Got user data\"] = userId ? 1 : 0;\n"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}getUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{social_user_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\"}"
						},
						"description": "get_user"
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Update user data",
			"description": "update_user_flow",
			"item": [
				{
					"name": "getUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar userId = typeof response.data.id !== 'undefined' ? response.data.id : 0;\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\ntests[\"Got user data\"] = userId ? 1 : 0;"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}getUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\"}"
						},
						"description": "get_user"
					},
					"response": []
				},
				{
					"name": "updateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n//tests\n\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\ntests[\"Updated correct user\"] = response.data.id === postman.getEnvironmentVariable('new_user_id');\ntests[\"Updated data shows in profile\"] = response.data.profile.postCode === postman.getEnvironmentVariable('user_update_postal');"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"user_update_postal\",\"94301\");"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}updateUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"id\":\"{{new_user_id}}\",\"postCode\":\"{{user_update_postal}}\"}"
						},
						"description": "update_user"
					},
					"response": []
				},
				{
					"name": "getUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar userId = typeof response.data.id !== 'undefined' ? response.data.id : 0;\nvar postCode = typeof response.data.profile.postCode !== 'undefined' ? response.data.profile.postCode : 0;\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\ntests[\"Got user data\"] = userId ? 1 : 0;\ntests[\"Got updated data\"] = postCode === postman.getEnvironmentVariable('user_update_postal');"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}getUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\"}"
						},
						"description": "get_user"
					},
					"response": []
				},
				{
					"name": "updateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\ntests[\"Updated correct user\"] = response.data.id === postman.getEnvironmentVariable('new_user_id');\ntests[\"Updated data shows in profile\"] = response.data.profile.postCode === '';"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}updateUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"id\":\"{{new_user_id}}\",\"postCode\":\"\"}"
						},
						"description": "update_user"
					},
					"response": []
				}
			]
		},
		{
			"name": "5. Link Social User",
			"description": "link_social_flow",
			"item": [
				{
					"name": "linkSocialUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar userId = typeof response.data.id !== 'undefined' ? response.data.id : '';\nvar socialUserExists = typeof response.data.social[0].puid !== 'undefined';\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\ntests[\"Got user data\"] = response.status === 'success';\ntests[\"Link response correct user\"] = userId === postman.getEnvironmentVariable('new_user_id');\ntests[\"Social User set in social array\"] =socialUserExists;\ntests[\"Link success! Social user showing up in data.\"] = responseBody.has(postman.getEnvironmentVariable('link_social_user'));\n\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"link_social_user\", Math.random().toString(36).substring(2) + _.random(2000, 100));"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}linkSocialUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"id\":\"{{new_user_id}}\",\"socialPid\":\"{{social_user_provider}}\",\"socialUsername\":\"{{link_social_user}}\"}"
						},
						"description": "link_social_user"
					},
					"response": []
				},
				{
					"name": "getUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\ntests[\"Link staying! Social user showing up in data.\"] = responseBody.has(postman.getEnvironmentVariable('link_social_user'));"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}getUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\"}"
						},
						"description": "get_user"
					},
					"response": []
				},
				{
					"name": "unlinkSocialUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar userId = response.data.id !== 'undefined' ? response.data.id : 0;\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\ntests[\"unlink shows correct user\"] = userId === postman.getEnvironmentVariable('new_user_id');\ntests[\"unlink successful\"] = !responseBody.has(postman.getEnvironmentVariable('link_social_user'));"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}unlinkSocialUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"id\":\"{{new_user_id}}\",\"socialPid\":\"{{social_user_provider}}\",\"socialUsername\":\"{{link_social_user}}\"}"
						},
						"description": "unlink_social_user"
					},
					"response": []
				},
				{
					"name": "getUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar userId = typeof response.data.id !== 'undefined' ? response.data.id : 0;\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\ntests[\"Got user data\"] = userId ? 1 : 0;\n"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}getUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\"}"
						},
						"description": "get_user"
					},
					"response": []
				}
			]
		},
		{
			"name": "7. passwordReset",
			"description": "password_reset_flow",
			"item": [
				{
					"name": "sendPasswordReset",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n\npostman.setEnvironmentVariable(\"pwd_txnid\", postman.getResponseHeader(\"X-AOL-IDENTITY-TX-ID\"));\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\n\n"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}sendPasswordReset",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"username\":\"{{create_user_email}}\"}"
						},
						"description": "send_password_reset"
					},
					"response": []
				},
				{
					"name": "getTokenByTxnId",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar token = typeof response.data !== 'undefined' ? response.data : 0;\n\npostman.setEnvironmentVariable('password_reset_token', token);\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\ntests['got password reset token'] = token ? 1 : 0;\n//recovery\nvar count = typeof postman.getEnvironmentVariable('pwdGetTokenByTxnIdTries') !== 'undefined' ? postman.getEnvironmentVariable('pwdGetTokenByTxnIdTries') : 1;\n\nif(response.status !== 'success' && count < 3){\n    postman.setNextRequest('get_token_by_txn_id_pwd_reset_flow');\n    \n}"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}getTokenByTxnId",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\n  \"transactionId\": \"{{pwd_txnid}}\"\n}"
						},
						"description": "get_token_by_txn_id"
					},
					"response": []
				},
				{
					"name": "confirmPasswordReset",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"reset_user_password\",eval(postman.getEnvironmentVariable(\"generate_password\")));"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}confirmPasswordReset",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\n  \"token\": \"{{password_reset_token}}\",\n  \"username\":\"{{create_user_email}}\",\n  \"password\":\"{{reset_user_password}}\"\n}"
						},
						"description": "confirm_password_reset"
					},
					"response": []
				},
				{
					"name": "authenticate user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar userAccessToken = typeof response.access_token !== 'undefined' ? response.access_token : 0;\nif(userAccessToken){\n    postman.setEnvironmentVariable(\"user_access_token\", userAccessToken);\n}\n//tests\ntests[\"Success Response\"] = responseCode.code === 200;\ntests[\"Got user access_token\"] = userAccessToken ? 1 : 0;\n"
							}
						}
					],
					"request": {
						"url": "{{oauth_server}}",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{create_user_email}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text",
									"enabled": true
								},
								{
									"key": "scope",
									"value": "brand_api",
									"type": "text",
									"enabled": true
								},
								{
									"key": "password",
									"value": "{{reset_user_password}}",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "oauth2,access_token"
					},
					"response": []
				}
			]
		},
		{
			"name": "8. Confirm Email",
			"description": "confirm_email_flow",
			"item": [
				{
					"name": "sendEmailConfirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n\npostman.setEnvironmentVariable(\"email_txnid\", postman.getResponseHeader(\"X-AOL-IDENTITY-TX-ID\"));\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}sendConfirmEmail",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"username\":\"{{create_user_email}}\"}"
						},
						"description": "send_confirm_email"
					},
					"response": []
				},
				{
					"name": "getTokenByTxnId",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\nvar token = typeof response.data !== 'undefined' ? response.data : 0;\n\npostman.setEnvironmentVariable('email_confirm_token', token);\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';\ntests['got email token'] = token ? 1 : 0;\n\n//recovery\nvar count = typeof postman.getEnvironmentVariable('emailGetTokenByTxnIdTries') !== 'undefined' ? postman.getEnvironmentVariable('emailGetTokenByTxnIdTries') : 1;\n\nif(response.status !== 'success' && count < 3){\n    postman.setNextRequest('get_token_by_txn_id_email_confirmation_flow');\n    \n}"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}getTokenByTxnId",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\n  \"transactionId\": \"{{email_txnid}}\"\n}"
						},
						"description": "get_token_by_txn_id"
					},
					"response": []
				},
				{
					"name": "confirm_email",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}confirmEmail",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{service_access_token}}",
								"description": ""
							},
							{
								"key": "X-AOL-API-CTX",
								"value": "eyJwZWVyX2lwIjoiMC4wLjAuMCIsImNoYWQiOiJhc2Zhc2RmIiwicmVmZXJyZXIiOiJodHRwOi8vd3d3LmVuZ2FkZ2V0LmNvbSIsInVhdXRoaWQiOiIzNDV3dzQ1MzQiLCJncmF2aXR5IjoieHh4eCJ9",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\n  \"token\": \"{{email_confirm_token}}\",\n  \"username\":\"{{create_user_email}}\"\n}"
						},
						"description": "confirmEmail"
					},
					"response": []
				}
			]
		},
		{
			"name": "9. Delete Accounts",
			"description": "delete_user_flow",
			"item": [
				{
					"name": "deleteUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}deleteUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_access_token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"id\":\"{{new_user_id}}\"\n}"
						},
						"description": "delete_user"
					},
					"response": []
				},
				{
					"name": "deleteUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var response = responseBody !== '' ? JSON.parse(responseBody) : {};\n\n//tests\ntests[\"Success Response\"] = typeof response.status !== 'undefined' && response.status == 'success';"
							}
						}
					],
					"request": {
						"url": "{{brand_api_server}}deleteUser",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{social_user_access_token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"namespace\":\"{{namespace}}\",\"id\":\"{{social_user_id}}\"\n}"
						},
						"description": "delete_user,social_user"
					},
					"response": []
				}
			]
		}
	]
}